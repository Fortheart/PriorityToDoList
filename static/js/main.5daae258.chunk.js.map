{"version":3,"sources":["img/times-solid.svg","appStyle.js","selectBox.component.jsx","clock.component.jsx","App.js","serviceWorker.js","index.js","img/check-solid.svg"],"names":["module","exports","Main","styled","section","PrioritySelector","button","PrioritySelectors","div","TodoTextInput","input","PriorityTextSelect","select","TodoAddButton","ResultContainer","ResultContainerUl","ul","ResultIcons","img","ResultText","li","ResultH3","h3","CompletedItemsCount","selectBox","props","addItem","selectBoxElement","document","getElementById","setState","selectBoxValue","value","console","log","state","id","this","selectValue","onClick","React","Component","DateTimeDiv","DateParagraph","p","TimeParagraph","Clock","time","Date","setInterval","currentTime","toLocaleDateString","toLocaleTimeString","App","allItems","filterPriority","mustFilterItems","shouldFilterItems","couldFilterItems","newItem","list","completedItems","localStorage","getItem","setItem","JSON","stringify","parse","title","key","Math","random","slice","priority","push","updatedList","filter","item","prevState","className","path","exact","component","SelectBox","type","placeholder","onChange","e","updateInput","target","class","deleteAll","map","deleteItem","src","crossCheck","completeItem","checkIcon","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.5daae258.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/times-solid.aa97bc00.svg\";","import styled from 'styled-components';\n\n\n//STYLE//\nexport const Main = styled.section`\nbackground: #E5E8EF;\nmargin: 0;\npadding: 0;\npadding-bottom: 50px;\n`;\n\nexport const PrioritySelector = styled.button`\nfont-size: 33px;\nfont-weight: regular;\nbackground: none;\nborder: none;\nmargin: 0 34px;\n`;\n\nexport const PrioritySelectors = styled.div`\ntext-align: center;\nwidth: 80%;\nmargin-left: 10%;\nmargin-top: 10%;\n\n`;\n\nexport const TodoTextInput = styled.input`\nborder-radius: 35px;\nbackground: #FFF;\nbox-shadow:  20px 20px 60px #ced1d7, \n             -20px -20px 60px #fcffff;\nborder: none;\nwidth: 40%;\nheight: 60px;\nmargin: 0 30%;\nmargin-top: 4%;\nfont-size: 20px;\npadding-left: 2%;\n\n`;\n\nexport const PriorityTextSelect = styled.select`\n\n-moz-appearance:none; /* Firefox */\n-webkit-appearance:none; /* Safari and Chrome */\nappearance:none;\n\n\nborder-radius: 35px;\nbackground: #E5E8EF;\nbox-shadow:  -20px 20px 60px #ced1d7, \n             20px -20px 60px #fcffff;\nwidth: 15%;\nheight: 60px;\nborder: none;\npadding: 0 0 0 4% ;\nfont-size: 20px;\n\nbackground: url(./img/down-arrow.png) no-repeat right;\nbackground-size: 30px;\nmargin-left: 37%;\nmargin-top: 3%;\n\n`;\n\nexport const TodoAddButton = styled.button`\nborder-radius: 35px;\nbackground: #E5E8EF;\nbox-shadow:  -5px 5px 10px #ced1d7, \n             5px -5px 10px #fcffff;\nwidth: 7%;\nheight: 60px;\nborder: none;\nmargin-left: 5%;\n\nfont-size: 20px;\n`;\n\nexport const ResultContainer = styled.div`\nborder-radius: 35px;\nbackground: #FFFFFF;\nbox-shadow:  20px 20px 60px #CED1D7, \n             -20px -20px 60px #fcffff;\ntext-decoration: none;\npadding: 50px 0;\nwidth: 80%;\nmargin: 3% 10%;\n`;\n\nexport const ResultContainerUl = styled.ul`\n  list-style-type: none;\n`;\n\nexport const ResultIcons = styled.img`\nwidth: 24px;\ncursor: pointer;\nmargin: 0;\npadding: 0;\nfloat: right;\nmargin-right: 1%;\n`;\n\nexport const ResultText = styled.li`\nfont-size: 25px;\nborder-bottom: 1px solid #EFEFEF;\nmargin-bottom: 26px;\nmargin-right: 7%;\nmargin-left: 7%;\npadding-left: 1%;\n`;\n\nexport const ResultH3 = styled.h3`\nmargin-left: 5%;\nfont-size: 33px;\nfont-weight: 400;\n`;\n\nexport const CompletedItemsCount = styled.button`\nborder-radius: 35px;\nbackground: #E5E8EF;\nbox-shadow:  5px 5px 10px #ced1d7, \n             -5px -5px 10px #fcffff;\nwidth: 70px;\nheight: 70px;\nborder: none;\nmargin-left: 5%;\nmargin-top: 5%;\nfont-size: 20px;\n\n&:hover {\n    background: white;\n    cursor: pointer;\n  }\n\n`;\n\n","import React from 'react';\n\nclass selectBox extends React.Component {\n    constructor(props) {\n        super(props)\n\n        this.state = { selectBoxValue: \"\" }\n    }\n\n    addItem = () => {\n        const selectBoxElement = document.getElementById(\"selectBoxElement\")\n        this.setState({ selectBoxValue: selectBoxElement.value });\n        console.log(this.state);\n    }\n\n\n    render() {\n        return (\n            <div>\n\n                <select id=\"selectBoxElement\" value={this.state.selectValue}\n                >\n                    <option value=\"Must\">Must do today</option>\n                    <option value=\"Should\">Should do today</option>\n                    <option value=\"Could\">Could do today</option>\n                </select>\n                <button onClick={this.addItem}>Add</button>\n\n\n\n            </div>\n        )\n    }\n}\n\nexport default selectBox;","import React from 'react';\nimport styled from 'styled-components';\n\nconst DateTimeDiv = styled.div`\nwidth: 100%;\nheight: 50px;\npadding-top: 2%;\n\n`;\nconst DateParagraph = styled.p`\nfloat: left;\nmargin-left: 3%;\n`;\nconst TimeParagraph = styled.p`\nfloat: right;\nmargin-right: 3%;\n`;\nclass Clock extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            time: new Date()\n        }\n    }\n\n    currentTime() {\n        this.setState({\n            time: new Date()\n        })\n    }\n\n    componentWillMount() {\n        setInterval(() => this.currentTime(), 1000)\n\n    }\n\n\n    render() {\n        return (\n            <DateTimeDiv>\n                <DateParagraph>{this.state.time.toLocaleDateString()}</DateParagraph>\n                <TimeParagraph>{this.state.time.toLocaleTimeString()}</TimeParagraph>\n\n            </DateTimeDiv>\n        )\n    }\n}\n\nexport default Clock;","import React, { Component } from 'react';\n\nimport {\n  Main, PrioritySelector, PrioritySelectors,\n  TodoTextInput, PriorityTextSelect,\n  TodoAddButton, ResultContainer,\n  ResultContainerUl, ResultIcons,\n  ResultText, ResultH3, CompletedItemsCount\n} from './appStyle';\n\n\nimport checkIcon from './img/check-solid.svg';\nimport crossCheck from './img/times-solid.svg';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport SelectBox from './selectBox.component';\nimport Clock from './clock.component';\n\n\n\nclass App extends Component {\n\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      newItem: \"\",\n      list: [],\n      filterPriority: \"All\",\n      completedItems: 0\n    }\n\n    if (localStorage.getItem(\"list\") < 1) {\n      localStorage.setItem('list', JSON.stringify(this.state.list));\n    }\n  }\n  componentDidMount() {\n    var list = JSON.parse(localStorage.getItem(\"list\"));\n    var completedItems = JSON.parse(localStorage.getItem(\"completedItemsLS\"));\n    this.setState({ list });\n    this.setState({ completedItems });\n\n    document.title = \"Priority To Do List\"\n\n\n\n  }\n\n\n\n  updateInput(key, value) {\n    this.setState({\n      [key]: value\n    })\n  }\n\n  addItem() {\n    const selectBoxElement = document.getElementById(\"selectBoxElement\")\n    const newItem = {\n      id: 1 + Math.random(),\n      value: this.state.newItem.slice(),\n      priority: selectBoxElement.value\n    };\n\n    const list = [... this.state.list];\n    list.push(newItem);\n\n    localStorage.setItem('list', JSON.stringify(list));\n    this.setState({\n      list,\n      newItem: \"\"\n    })\n\n\n\n  }\n  deleteItem(id) {\n    const list = [...this.state.list];\n    const updatedList = list.filter(item => item.id !== id);\n\n    this.setState({ list: updatedList });\n    localStorage.setItem('list', JSON.stringify(updatedList));\n\n  }\n  deleteAll() {\n    this.setState({ completedItems: 0 })\n  }\n  completeItem(id) {\n    const list = [...this.state.list];\n    const updatedList = list.filter(item => item.id !== id);\n\n    this.setState({ list: updatedList });\n    localStorage.setItem('list', JSON.stringify(updatedList));\n\n\n\n    //const completedItemsLS = JSON.parse(localStorage.getItem(\"completedItems\"));\n    //const completedItems = this.state.completedItems;\n\n    this.setState(prevState => {\n      return { completedItems: prevState.completedItems + 1 }\n    })\n\n    //localStorage.setItem('completedItemsLS', JSON.stringify(completedItems));\n\n\n  }\n\n  allItems = () => {\n    this.setState({ filterPriority: \"All\" })\n  }\n\n  mustFilterItems = () => {\n    this.setState({ filterPriority: \"Must\" })\n  }\n\n  shouldFilterItems = () => {\n    this.setState({ filterPriority: \"Should\" })\n  }\n\n  couldFilterItems = () => {\n    this.setState({ filterPriority: \"Could\" })\n  }\n  componentDidUpdate() {\n    const completedItems = this.state.completedItems;\n    localStorage.setItem('completedItemsLS', JSON.stringify(completedItems));\n  }\n\n\n\n\n  render() {\n\n    return (\n      <div>\n        <Main>\n          <header className=\"App-header\">\n\n            <Clock />\n            <Router>\n              <Switch>\n                <Route path=\"/SelectBox\" exact component={SelectBox} />\n              </Switch>\n            </Router>\n          </header>\n          <PrioritySelectors>\n            <PrioritySelector className=\"all\" onClick={this.allItems}>All</PrioritySelector>\n            <PrioritySelector className=\"mustDo\" onClick={this.mustFilterItems}>Must do today!</PrioritySelector>\n            <PrioritySelector className=\"shouldDo\" onClick={this.shouldFilterItems}>Should do today</PrioritySelector>\n            <PrioritySelector className=\"couldDo\" onClick={this.couldFilterItems}>Could do today</PrioritySelector>\n          </PrioritySelectors>\n\n          {/*<p>{this.state.list.length}</p>*/}\n          <TodoTextInput\n            type=\"text\"\n            placeholder=\"Type something...\"\n            value={this.state.newItem}\n            onChange={e => this.updateInput(\"newItem\", e.target.value)}\n          />\n          <i class=\"las la-angle-down\"></i>\n          <PriorityTextSelect id=\"selectBoxElement\" value={this.state.selectValue} >\n            <option value=\"Must\">Must do today!</option>\n            <option value=\"Should\">Should do today</option>\n            <option value=\"Could\">Could do today</option>\n          </PriorityTextSelect>\n          <TodoAddButton onClick={() => this.addItem()}>Add</TodoAddButton>\n          <div>\n            <CompletedItemsCount onClick={() => this.deleteAll()}>{this.state.completedItems}</CompletedItemsCount>\n          </div>\n        </Main>\n        <div>\n\n          {this.state.filterPriority === \"All\" ?\n            <div>\n              <ResultContainer>\n                <ResultH3>Must do today!</ResultH3>\n                <ResultContainerUl>{this.state.list.filter(item => item.priority === \"Must\").map(item => {\n                  return (\n                    <ResultText key={item.id}>{item.value}\n                      <a onClick={() => this.deleteItem(item.id)}>\n                        <ResultIcons src={crossCheck}></ResultIcons>\n                      </a>\n                      <a onClick={() => this.completeItem(item.id)}>\n                        <ResultIcons src={checkIcon}></ResultIcons>\n                      </a>\n                    </ResultText>\n                  )\n                })}\n                </ResultContainerUl>\n              </ResultContainer>\n\n              <ResultContainer>\n                <ResultH3>Should do today</ResultH3>\n                <ResultContainerUl>{this.state.list.filter(item => item.priority === \"Should\").map(item => {\n                  return (\n                    <ResultText key={item.id}>{item.value}\n                      <a onClick={() => this.deleteItem(item.id)}>\n                        <ResultIcons src={crossCheck}></ResultIcons>\n                      </a>\n                      <a onClick={() => this.completeItem(item.id)}>\n                        <ResultIcons src={checkIcon}></ResultIcons>\n                      </a>\n                    </ResultText>\n                  )\n                })}\n                </ResultContainerUl>\n              </ResultContainer>\n\n              <ResultContainer>\n                <ResultH3>Could do today</ResultH3>\n                <ResultContainerUl>{this.state.list.filter(item => item.priority === \"Could\").map(item => {\n                  return (\n                    <ResultText key={item.id}>{item.value}\n                      <a onClick={() => this.deleteItem(item.id)}>\n                        <ResultIcons src={crossCheck}></ResultIcons>\n                      </a>\n                      <a onClick={() => this.completeItem(item.id)}>\n                        <ResultIcons src={checkIcon}></ResultIcons>\n                      </a>\n                    </ResultText>\n                  )\n                })}\n                </ResultContainerUl>\n              </ResultContainer>\n\n            </div>\n\n\n            : null\n          }\n\n          {this.state.filterPriority === \"Must\" ?\n            <ResultContainer>\n              <ResultH3>Must do today!</ResultH3>\n              <ResultContainerUl>{this.state.list.filter(item => item.priority === \"Must\").map(item => {\n                return (\n                  <ResultText key={item.id}>{item.value}\n                    <a onClick={() => this.deleteItem(item.id)}>\n                      <ResultIcons src={crossCheck}></ResultIcons>\n                    </a>\n                    <a onClick={() => this.completeItem(item.id)}>\n                      <ResultIcons src={checkIcon}></ResultIcons>\n                    </a>\n                  </ResultText>\n                )\n              })}\n              </ResultContainerUl>\n            </ResultContainer>\n            : null\n          }\n          {this.state.filterPriority === \"Should\" ?\n            <ResultContainer>\n              <ResultH3>Should do today</ResultH3>\n              <ResultContainerUl>{this.state.list.filter(item => item.priority === \"Should\").map(item => {\n                return (\n                  <ResultText key={item.id}>{item.value}\n                    <a onClick={() => this.deleteItem(item.id)}>\n                      <ResultIcons src={crossCheck}></ResultIcons>\n                    </a>\n                    <a onClick={() => this.completeItem(item.id)}>\n                      <ResultIcons src={checkIcon}></ResultIcons>\n                    </a>\n                  </ResultText>\n                )\n              })}\n              </ResultContainerUl>\n            </ResultContainer>\n            : null\n          }\n          {this.state.filterPriority === \"Could\" ?\n            <ResultContainer>\n              <ResultH3>Could do today</ResultH3>\n              <ResultContainerUl>{this.state.list.filter(item => item.priority === \"Could\").map(item => {\n                return (\n                  <ResultText key={item.id}>{item.value}\n                    <a onClick={() => this.deleteItem(item.id)}>\n                      <ResultIcons src={crossCheck}></ResultIcons>\n                    </a>\n                    <a onClick={() => this.completeItem(item.id)}>\n                      <ResultIcons src={checkIcon}></ResultIcons>\n                    </a>\n                  </ResultText>\n                )\n              })}\n              </ResultContainerUl>\n            </ResultContainer>\n            : null\n          }\n          {console.log(this.state.list)}\n        </div>\n      </div>\n\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/check-solid.1f713fac.svg\";"],"sourceRoot":""}